define([
        "jquery", 
        "core/config", 
        "core/str", 
        "core/notification", 
], function($, Config, Str, Notification) {
    "use strict";
    var lastUserMessage, getUserMessage, lastBotMessage, userAnwserTodo = '';
    var SELECTOR = {
            SECLECTHELPBOX: '.help-content-chatbot li',
            SELECTTAGHELP: '.tag-chatbot',
            SUGGESTIONTAGSBOX: '.bot-caption',
            BOTRESPONSEWAIT: '#response-animation',
            KEYUPINPUTMESSAGE: 'input[name=send-message]',
            CHATBOTICON: '#chatbot-icon',
            CHATBOTCHAT: '#chatbot-chat',
            BUTTONCLOSEBOXCHAT: '.tpl-close',
            BUTTONIMAGESENDMSG: '.send-icon path',
            BUTTONSENDMSG: '#send-message',
            MAINCONVERSATION: '.main-conversation-chatbot',
            BOTCHAT: '.bot-chat',
            USERCHAT: '.user-chat',
            TYPEINGMESSAGE: '.typing-chatbot',
            MINIPOPUPCHATBOT: '.mini-popup-chatbot'
    };

    var mainScript = Config.wwwroot;
    var settings, script;

    $(document).ready(function() {
        $(SELECTOR.CHATBOTICON).click(function(){
            if($(SELECTOR.MAINCONVERSATION + ' .bot-chat').length == 0) {
                $(SELECTOR.TYPEINGMESSAGE).attr('style', 'pointer-events: none');
                chatbotResponse('hi').then(async res => {
                    $(SELECTOR.TYPEINGMESSAGE).removeAttr("style");
                    $(SELECTOR.BOTRESPONSEWAIT).replaceWith(enterMessageHtmlToChatBox(res));
                    suggestListTagHTML();
                });
            }
            $(this).animate({bottom: '-55px'});
            $(this).slideToggle();
            $(SELECTOR.MINIPOPUPCHATBOT).fadeOut('fast');
            $(SELECTOR.CHATBOTCHAT).slideToggle();
        });
        $(SELECTOR.BUTTONCLOSEBOXCHAT).click(function(){
            $(SELECTOR.CHATBOTICON).animate({bottom: '55px'});
            $(SELECTOR.CHATBOTCHAT).slideToggle();
            $(SELECTOR.CHATBOTICON).slideToggle();
        });
        $(SELECTOR.KEYUPINPUTMESSAGE).keyup(function() {
            $(SELECTOR.BUTTONIMAGESENDMSG).attr('fill', '#006cff');
            if($(SELECTOR.KEYUPINPUTMESSAGE).val() == '') {
                $(SELECTOR.BUTTONIMAGESENDMSG).attr('fill', '#d7d7d7');
            }
        });
        $(SELECTOR.MINIPOPUPCHATBOT).on('click', function() {
            $(SELECTOR.MINIPOPUPCHATBOT).fadeOut('slow');
        })

        setTimeout(function() {
            if($(SELECTOR.CHATBOTCHAT + ':visible').length == 0) {
                $(SELECTOR.MINIPOPUPCHATBOT).fadeIn('slow');
            }
        }, 10000);
        
    });

    function autoScrollBottom() {
        $('.conversation-chatbot').animate({scrollTop: document.body.scrollHeight},"fast");
    } 

    const wait = async ms => {
        await new Promise(res => setTimeout(res, ms));
    };

    function delay(t, v) {
        return new Promise(function(resolve) { 
            setTimeout(resolve.bind(null, v), t)
        });
    }

    $.urlParam = function(name){
        var urlUserID = $('.text-username').attr('href');
        var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(urlUserID);
        if (results==null) {
           return null;
        }
        return decodeURI(results[1]) || 0;
    }

    function getUserId() {
        return $.urlParam('id');
    }

    // Hi·ªán th·ªã c√°c tag g·ª£i √Ω v√†o chatbot
    async function suggestListTagHTML() {
        var defaultAnswer = botResponseHTML('B·∫°n c√≥ c·∫ßn t√¥i h·ªó tr·ª£ hay kh√¥ng ü§ó?');
        await botSendMessage(defaultAnswer);
        enterMessageHtmlToChatBox(botResponseYesNoHTML);
        $('#chatbot-yesno span').click(async function() {
            userAnwserTodo = $(this).text();
            autoScrollBottom();
            $("#chatbot-yesno").remove();
            if(userAnwserTodo == 'Kh√¥ng') {
                var message = botResponseHTML('N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, vui l√≤ng nh·∫≠p "tr·ª£ gi√∫p" ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£!');
                await botSendMessage(message);
            } else if(userAnwserTodo == 'C√≥') {
                enterMessageHtmlToChatBox(userSendMessageHTML(userAnwserTodo));
                var topicMessage = botResponseHTML('Ch·ªçn 1 trong c√°c l·ª±a ch·ªçn b√™n d∆∞·ªõi ƒë∆∞·ª£c h·ªó tr·ª£ üí°');
                await botSendMessage(topicMessage);
                enterMessageHtmlToChatBox(botResponseTopicHTML);
                $('#chatbot-topic span').click(function() {
                    userAnwserTodo = $(this).text();
                    autoScrollBottom();
                    userSendMessage(userAnwserTodo);
                    $("#chatbot-topic").remove();
                });
            }
        });
    }

    // Add yes/no tag v√†o chatbot v√† x·ª≠ l√Ω
    async function continueAskChatBotHTML() {
        var defaultAnswer = botResponseHTML('B·∫°n c√≥ mu·ªën ƒë∆∞·ª£c h·ªó tr·ª£ th√™m?');
        await botSendMessage(defaultAnswer);
        enterMessageHtmlToChatBox(botResponseYesNoHTML);
        $('#chatbot-yesno span').click(async function() {
            userAnwserTodo = $(this).text();
            autoScrollBottom();
            $("#chatbot-yesno").remove();
            if(userAnwserTodo == 'Kh√¥ng') {
                var message = botResponseHTML('N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, vui l√≤ng nh·∫≠p "tr·ª£ gi√∫p" ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£!');
                await botSendMessage(message);
            } else if(userAnwserTodo == 'C√≥') {
                enterMessageHtmlToChatBox(userSendMessageHTML(userAnwserTodo));
                var topicMessage = botResponseHTML('H√£y ch·ªçn 1 trong nh·ªØng l·ª±a ch·ªçn b√™n d∆∞·ªõi ƒë·ªÉ ti·∫øp t·ª•c üëá!');
                await botSendMessage(topicMessage);
                enterMessageHtmlToChatBox(botResponseTopicHTML);
                $('#chatbot-topic span').click(function() {
                    userAnwserTodo = $(this).text();
                    autoScrollBottom();
                    userSendMessage(userAnwserTodo);
                    $("#chatbot-topic").remove();
                });
            }
        });

    }

    // Hi·ªán th·ªã c√°c g·ª£i √Ω khi ch·ªçn tag help
    function helpSendMessageHTML(text) {
        var html = '<div class="help-chat"';
        html += '<div class="tpl-text-response-wrapper" data-type="help">';
        html += '<div class="tpl-text-response">';
        html += '<div class="help-content-chatbot">';
        html += '<ul class="list-group">';
        html += '<li class="list-group-item">Xem danh s√°ch kh√≥a h·ªçc</li>';
        html += '<li class="list-group-item">Xem danh s√°ch kh√≥a gi·∫£ng</li>';
        html += '<li class="list-group-item">Xem danh s√°ch s√°ch ƒëi·ªÉm c·ªßa c√°c kh√≥a h·ªçc</li>';
        html += '<li class="list-group-item">Xem s·ª± ki·ªán s·∫Øp h·∫øt h·∫°n</li>';
        html += '<li class="list-group-item">Xem kh√≥a h·ªçc s·∫Øp h·∫øt h·∫°n</li>';
        html += '</div>';
        html += '</ul>';
        html += '</div>';
        html += '</div>';
        html += '</div>';
        html += '</div>';
        return html;
    }

    // add chat c·ªßa user v√†o chatbot
    function userSendMessageHTML(text) {
        var html = '<div class="user-chat">';
        html += '<div class="user-response-wrapper">';
        html += '<div class="tpl-text-response-wrapper" data-type="user">';
        html += '<div class="tpl-text-response">';
        html += text;
        html += '</div>';
        html += '</div>';
        html += '</div>';
        html += '</div>';
        return html;
    }

    // add chat c·ªßa bot v√†o chatbot
    function botResponseHTML(text) {
        var html = '<div class="bot-chat">';
        html += '<div class="user-response-wrapper">';
        html += '<div class="tpl-text-response-wrapper" data-type="bot">';
        html += '<div class="tpl-text-response">';
        html += text;
        html += '</div>';
        html += '</div>';
        html += '</div>';
        html += '</div>';
        return html;
    }

    // add chat c·ªßa bot khi ƒë√£ qua x·ª≠ l√Ω c·ªßa API
    function botResponseFromHelpHTML(text) {
        var html = '<div class="respone-tag-help-chat">';
        html += '<div class="user-response-wrapper">';
        html += '<div class="tpl-text-response-wrapper" data-type="help">';
        html += '<div class="tpl-text-response">';
        html += text;
        html += '</div>';
        html += '</div>';
        html += '</div>';
        html += '</div>';
        return html;
    }

    // Aniamtion prechat tr√™n chatbot 
    function botSpinerResponseHTML() {

        var html = '<div class="bot-chat" id="response-animation">';
        html += '<div class="user-response-wrapper">';
        html += '<div class="tpl-text-response-wrapper" data-type="bot">';
        html += '<div class="tpl-text-response">';
        html += '<span class="spinme-left">';
        html += '<div class="spinner">';
        html += '<div class="bounce1"></div><div class="bounce2"></div><div class="bounce3">';
        html += '</div>';
        html += '</span>';
        html += '</div>';
        html += '</div>';
        html += '</div>';
        html += '</div>';
        return html;
    }

    // add tag list v√†o khung chat
    function botResponseTagHTML(listTag, elementId) {
        var html = '<div class="respone-tag-help-chat mt-0" id="'+elementId+'">';
        html += '<div class="user-response-wrapper">';
        html += '<div class="tpl-text-response-wrapper" data-type="help">';
        html += '<div class="tpl-text-response">';
        html += '<div class="bot-caption m-0">';

        // Render danh s√°ch tag
        $.map( listTag, function(value, index) {
            html += '<span class="tag-chatbot mr-2 mt-1">';
            html += value;
            html += '</span>';
        });

        html += '</div>';
        html += '</div>';
        html += '</div>';
        html += '</div>';
        html += '</div>';
        return html; 
    }

    // tag list yes / no
    function botResponseYesNoHTML() {
       
        var elementId = 'chatbot-yesno';
        var listTag = ['C√≥', 'Kh√¥ng'];
        return botResponseTagHTML(listTag, elementId);

    }
    // tag list todo help 
    function botResponseTopicHTML() {
        var elementId = 'chatbot-topic';
        var listTag = ['Kh√≥a h·ªçc', 'B√†i ki·ªÉm tra', 'B√†i t·∫≠p v·ªÅ nh√†', 'K·∫øt qu·∫£ h·ªçc t·∫≠p', 'K·∫øt qu·∫£ h·ªçc t·∫≠p', 'K·∫øt qu·∫£ h·ªçc t·∫≠p', 'K·∫øt qu·∫£ h·ªçc t·∫≠p'];
        return botResponseTagHTML(listTag, elementId);
    }

    // tag list khi nh·∫≠p tr·ª£ gi√∫p
    function botResponseHelpTopicHTML() {
        var elementId = 'chatbot-help-topic';
        var listTag = ['Xem danh s√°ch kh√≥a h·ªçc', 'Xem danh s√°ch kh√≥a gi·∫£ng', 'Xem danh s√°ch s√°ch ƒëi·ªÉm c·ªßa c√°c kh√≥a h·ªçc', 'Xem s·ª± ki·ªán s·∫Øp h·∫øt h·∫°n', 'Xem kh√≥a h·ªçc s·∫Øp h·∫øt h·∫°n'];
        return botResponseTagHTML(listTag, elementId);
    }

    // event appand new message v√†o chatbox
    function enterMessageHtmlToChatBox(text) {
        $('.main-conversation-chatbot').append(text);
    }


    // Hi·ªán th·ªã b·∫£ng h∆∞·ªõng d·∫´n 
    function showHelpOptions(text) {
        var helpBoxHTML = helpSendMessageHTML(text);
        // enterMessageHtmlToChatBox(helpSendMessageHTML(helpSendMessageHTML));
        return  helpBoxHTML;
    }


    // B·∫£ng h∆∞·ªõng d·∫´n
    function selectHelpOptions(element) {
        $(element).click(function() {
            autoScrollBottom();
            lastUserMessage = $(this).text();
            enterMessageHtmlToChatBox(userSendMessageHTML($(this).text()));
            chatbotResponse(lastUserMessage).then(res => {
                if(res !== undefined) {
                    $(SELECTOR.BOTRESPONSEWAIT).replaceWith(enterMessageHtmlToChatBox(res));
                }
                autoScrollBottom();
            });
            
        });
    }

    // X·ª≠ l√Ω khi ch·ªçn help tag
    function selectTagHelp(element) {
        $(element).click(function() {
            $(SELECTOR.SUGGESTIONTAGSBOX).fadeOut();
            lastUserMessage = $(this).text();
            enterMessageHtmlToChatBox(userSendMessageHTML(lastUserMessage));
            chatbotResponse(lastUserMessage).then(res => {
                enterMessageHtmlToChatBox(res);
                selectHelpOptions(SELECTOR.SECLECTHELPBOX);
                autoScrollBottom();
            });
            
        });
    }

    // X√≥a t·∫•t c·∫£ c√°c tag tr√™n chatbox khi render d√≤ng chat m·ªõi
    function removeTagElement(listTag) {
        $.map(listTag, function(value, index) {
            if($(value).length > 0)
                $(value).remove();
        })
    }


    // Call api x·ª≠ l√Ω
    var callAjax = (script, settings) => {
        var botMessage = '';
        enterMessageHtmlToChatBox(botSpinerResponseHTML());
        return $.ajax(script, settings)
        .then((resp) => {
            var msg = resp.data[0].html;
            var preBotResponse = resp.data[0].message;
            enterMessageHtmlToChatBox(botResponseHTML(preBotResponse));
            if(msg != undefined) {
                if(msg == '') {
                    botMessage = botResponseHTML(msg);
                } else {
                    botMessage = botResponseFromHelpHTML(msg);
                }
            }
            autoScrollBottom();
            return Promise.resolve(botMessage);
        });
    }

    // X·ª≠ l√Ω c√°c input c·ªßa user v√† bot
    var chatbotResponse = async function(text) {
        var userId = parseInt(getUserId());
        var botMessage = '';
        var text = text.toLowerCase();
        var listTag = ['#chatbot-yesno', '#chatbot-topic'];
        removeTagElement(listTag);
        switch(true) {
            case text.includes('t·∫°m bi·ªát') || text.includes('bye') || text.includes('tho√°t') || text.includes('exit'):
                var helpMessage = botResponseHTML('T·∫°m bi·ªát, n·∫øu c·∫ßn h·ªó tr·ª£ h√£y g·ªçi t√¥i nh√© üòò!');
                await botSendMessage(helpMessage);
                break;
            case text.includes('hi') || text.includes('xin ch√†o') || text.includes('hello'):
                settings = {
                        type:"POST",
                        data:{
                            userid : userId,
                        },
                        contenttype:"application/json",
                    };
                script = mainScript + '/local/newsvnr/api/chatbot/hello';
                return callAjax(script, settings);
            case text.includes('kh√≥a h·ªçc'):
                settings = {
                        type:"POST",
                        data:{
                            userid : userId,
                            roleid : 5
                        },
                        contenttype:"application/json",
                    };
                script = mainScript + '/local/newsvnr/api/chatbot/mycourses';
                return await callAjax(script, settings).then((resp) => {
                    console.log(resp)
                    enterMessageHtmlToChatBox(resp)
                    continueAskChatBotHTML();
                });
            case text.includes('kh√≥a gi·∫£ng'):
                settings = {
                        type:"POST",
                        data:{
                            userid : userId,
                            roleid : 3
                        },
                        contenttype:"application/json",
                    };
                script = mainScript + '/local/newsvnr/api/chatbot/mycourses';
                return await callAjax(script, settings).then((resp) => {
                    console.log(resp)
                    enterMessageHtmlToChatBox(resp)
                    continueAskChatBotHTML();
                });
            case text.includes('help') || text.includes('tr·ª£ gi√∫p'):
                var helpMessage = botResponseHTML('Ch·ªçn ch·ªß ƒë·ªÅ ho·∫∑c vi·∫øt c√¢u h·ªèi c·ªßa b·∫°n b√™n d∆∞·ªõi üëá!');
                await botSendMessage(helpMessage);
                enterMessageHtmlToChatBox(botResponseHelpTopicHTML);
                $('#chatbot-help-topic span').click(async function() {
                    userAnwserTodo = $(this).text();
                    autoScrollBottom();
                    userSendMessage(userAnwserTodo);
                    $("#chatbot-help-topic").remove();
                });
                break;
            default:
                var defaultAnswer = botResponseHTML('B·∫°n c√≥ c·∫ßn t√¥i h·ªó tr·ª£ hay kh√¥ng ü§ó?');
                await botSendMessage(defaultAnswer);
                enterMessageHtmlToChatBox(botResponseYesNoHTML);
                autoScrollBottom();
                $('#chatbot-yesno span').click(async function() {
                    userAnwserTodo = $(this).text();
                    autoScrollBottom();
                    $("#chatbot-yesno").remove();
                    if(userAnwserTodo == 'Kh√¥ng') {
                        var message = botResponseHTML('N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, vui l√≤ng nh·∫≠p "tr·ª£ gi√∫p" ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£!');
                        await botSendMessage(message);
                    } else if(userAnwserTodo == 'C√≥') {
                        enterMessageHtmlToChatBox(userSendMessageHTML(userAnwserTodo));
                        var topicMessage = botResponseHTML('Ch·ªçn 1 trong c√°c l·ª±a ch·ªçn b√™n d∆∞·ªõi ƒë∆∞·ª£c h·ªó tr·ª£ üí°');
                        await botSendMessage(topicMessage);
                        enterMessageHtmlToChatBox(botResponseTopicHTML);
                        $('#chatbot-topic span').click(function() {
                            userAnwserTodo = $(this).text();
                            autoScrollBottom();
                            userSendMessage(userAnwserTodo);
                            $("#chatbot-topic").remove();
                        });
                    }
                });
            break;
        }
        
        return Promise.resolve(botMessage); 
    }

    // T·∫°o animation khi bot t·ª± ƒë·ªông chat...
    async function botSendMessage(message = '') {
        enterMessageHtmlToChatBox(botSpinerResponseHTML());
        await delay(500).then(resp => {
            $(SELECTOR.BOTRESPONSEWAIT).replaceWith(message);
            autoScrollBottom();
        })
    }

    // X·ª≠ l√Ω message user nh·∫≠p v√†o chatbox
    function userSendMessage(message = '') {
        if(message != "") {
            lastUserMessage = message;
        } else {
            lastUserMessage = $(SELECTOR.BUTTONSENDMSG).val();
            document.getElementById('send-message').value = '';
            document.getElementById('send-message').placeholder = 'Type your message here';    
        }
        enterMessageHtmlToChatBox(userSendMessageHTML(lastUserMessage));
        chatbotResponse(lastUserMessage).then(res => {
            $(SELECTOR.BOTRESPONSEWAIT).replaceWith(enterMessageHtmlToChatBox(res));
            autoScrollBottom();
        });
    }
    
    function keyPress(e) {
        var x = e || window.event;
        var key = (x.keyCode || x.which);
        if($(SELECTOR.BUTTONSENDMSG).val() != "") {
           if (key == 13 || key == 3) {
                autoScrollBottom();
                userSendMessage();
            }
        }
    }

    document.onkeypress = keyPress;
});

