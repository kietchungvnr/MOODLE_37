    {{#hasblocks}}
        <i id="sidepreopen-control"
            aria-expanded="{{#draweropenright}}true{{/draweropenright}}{{^draweropenright}}false{{/draweropenright}}"
            aria-controls="sidepre-blocks"
            data-action="toggle-drawer"
            data-side="right"
            data-preference="sidepre-open"
            class="d-none"
            title="{{#str}} showhideblocks, theme_moove {{/str}}">
        </i>

        <section id="sidepre-blocks" data-region="blocks-column" class="hidden-print d-none">
            {{{ sidepreblocks }}}
        </section>
    {{/hasblocks}}

    {{{ output.standard_after_main_region_html }}}

    
</div><!-- Ends .page-wrapper -->

{{{ output.standard_end_of_body_html }}}
</div>
</body>
</html>
{{#js}}
require.config({
    packages: [{
        name: 'highcharts',
        main: 'highcharts'
    }],
    paths: {
        // Change this to your server if you do not wish to use our CDN.
        highcharts: 'https://code.highcharts.com',
        jspicker: "//cdnjs.cloudflare.com/ajax/libs/flatpickr/4.2.3/flatpickr"
    }
});
 require.config({
    paths: {
      "kendo.all.min": "//kendo.cdn.telerik.com/2020.3.915/js/kendo.all.min",
      "dttable": "/local/newsvnr/js/datatable.min",
      "alertjs": "//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min",
      "validatefm" : "//cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.2/jquery.validate.min",
    }
});
require(['theme_boost/loader']);
require(['theme_boost/drawer'], function(mod) {
    mod.init();
});

require(['theme_moove/metismenu', 'jquery'], function(metisMenu, $) {

    $(".metismenu").metisMenu();

});

require(['jquery', 'core/config', 'theme_moove/handle_cookie'], function($, Config, Cookie) {
    var iconsearch = document.querySelector('.moove-search-input .slicon-magnifier');
    var btnclosesearch = document.querySelector('.search-input-form .close-search');
    var searchinputform = document.querySelector('.moove-search-input');
    if (iconsearch) {

        var togglesearchinputform = function() {
            searchinputform.classList.toggle('expanded');
        }

        iconsearch.onclick = togglesearchinputform;
        btnclosesearch.onclick = togglesearchinputform;
    }
    $('[data-region="drawer-toggle"]').click(function(){
        setTimeout(function(){
                $('#page').find('.dataTable[role="grid"][aria-describedby]').DataTable().columns.adjust().draw();

        },500);
       
    });
    var courseurl = '/course/view.php';
    if($('[data-region="drawer"]')) {
        $('[data-region="drawer"]').removeClass('closed');
        $('[data-region="drawer"]').addClass('open');
    }
    {{! active menu }}
    $(function(){
        $("#nav-draw ul li").parent().filter(function(){
            return this.href==location.href}
        ).addClass('active-nav').siblings().removeClass('active-nav');
        $("#enlaces li").parent().filter(function(){
            return this.href==location.href}
        ).addClass('active-nav').siblings().removeClass('active-nav');
    });
    // active UI câu hỏi trong bài kiểm tra quiz
    if($('#responseform')) {
        $('#responseform .content input').click(function() {
            var quizheight = $(this).closest('div.que.multichoice').height();
            var x = $(this).closest('div.que.multichoice').offset();
            if($(this).closest('div.qtype_multichoice_clearchoice').hasClass('abcd')) {
                $("html, body").animate({ scrollTop: x.top + quizheight - 20}, 1000);
            } else {
                $("html, body").animate({ scrollTop: x.top + quizheight - 40}, 1000);
            }
            var questionId = $(this).attr('id');
            var split = questionId.split(":");
            var splitAgian = split[1].split("_");
            var result = '#question-' + split[0].slice(1) + '-' + splitAgian[0];
            for(var i = 1; i <= $('a.qnbutton').length; i++) {
            var elment = 'a#quiznavbutton' + i;
            if($(elment).attr('href') == '#') {
                $(elment).addClass('answersaved').removeClass('notyetanswered');
            } else if($(elment).attr('href') == result) {
                $(elment).addClass('answersaved').removeClass('notyetanswered');
            }
        }
        })
        $('.qtype_multichoice_clearchoice').click(function() {
            var elm = $(this).attr('id');
            var splitElm = elm.split(":");
            var splitElmAgian = splitElm[1].split("_");
            var result = 'a#quiznavbutton' + splitElmAgian[0];
            $(result).addClass('notyetanswered').removeClass('answersaved');
        })
    }
}); 

require(['theme_moove/general_iframe']);

var id = $('.new-detail-chat').attr('data');
$('.new-detail-chat').load('/local/newsvnr/ajax/pagination_comment.php?discussionid='+id);

{{! $('div[data-region="coursecompetencyactivities"] li a').click(function(e) {
    e.preventDefault();
}) }}
{{/js}}
