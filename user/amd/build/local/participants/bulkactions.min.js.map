{"version":3,"sources":["../../../src/local/participants/bulkactions.js"],"names":["showAddNote","courseid","users","noteStateNames","stateHelpIcon","length","Promise","resolve","states","key","push","value","label","selected","context","stateNames","innerHTML","titlePromise","Str","get_string","ModalFactory","create","type","types","SAVE_CANCEL","body","Templates","render","title","buttons","save","removeOnClose","then","modal","getRoot","on","ModalEvents","submitAddNote","show","text","find","val","publishstate","notes","map","userid","Repository","createNotesForUsers","noteIds","msg","catch","Notification","exception","showSendMessage","submitSendMessage","wait","ms","setTimeout","spinner","getBody","formdata","params","jsonformdata","JSON","stringify","Fragment","loadFragment","submitFormAjax","form","$","attr","formData","serialize","ids","courseId","encodeURI","setBody","Ajax","call","methodname","args","contextid","data","Y","use","M","core_formchangechecker","reset_form_dirty_state","initKendo","alertify","success","util","removeAttr","error","addNotification","message","script","Config","wwwroot","ajax","dataType","contentType","action","resp","kendoDropDownList","dataSource","dataTextField","dataValueField","change","templateid","template","subject","html","content","focus","showSendEmail","setSaveButtonText","setLarge","hidden","remove","bind","shown","append","e","preventDefault","submit","messages","touserid","sendMessagesToUsers","messageIds"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Bulk actions for lists of participants.\r\n *\r\n * @module     core_user/local/participants/bulkactions\r\n * @package    core_user\r\n * @copyright  2020 Andrew Nicols <andrew@nicols.co.uk>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport * as Repository from 'core_user/repository';\r\nimport * as Str from 'core/str';\r\nimport ModalEvents from 'core/modal_events';\r\nimport ModalFactory from 'core/modal_factory';\r\nimport Templates from 'core/templates';\r\nimport {add as notifyUser} from 'core/toast';\r\nimport Ajax from 'core/ajax';\r\nimport Fragment from 'core/fragment';\r\nimport Config from 'core/config';\r\nimport Notification from 'core/notification';\r\nimport alertify from 'alertjs';\r\nimport kendo from 'kendo.all.min';\r\n\r\n\r\n/**\r\n * Show the add note popup\r\n *\r\n * @param {Number} courseid\r\n * @param {Number[]} users\r\n * @param {String[]} noteStateNames\r\n * @param {HTMLElement} stateHelpIcon\r\n * @return {Promise}\r\n */\r\nexport const showAddNote = (courseid, users, noteStateNames, stateHelpIcon) => {\r\n    if (!users.length) {\r\n        // No users were selected.\r\n        return Promise.resolve();\r\n    }\r\n\r\n    const states = [];\r\n    for (let key in noteStateNames) {\r\n        switch (key) {\r\n            case 'draft':\r\n                states.push({value: 'personal', label: noteStateNames[key]});\r\n                break;\r\n            case 'public':\r\n                states.push({value: 'course', label: noteStateNames[key], selected: 1});\r\n                break;\r\n            case 'site':\r\n                states.push({value: key, label: noteStateNames[key]});\r\n                break;\r\n        }\r\n    }\r\n\r\n    const context = {\r\n        stateNames: states,\r\n        stateHelpIcon: stateHelpIcon.innerHTML,\r\n    };\r\n\r\n    let titlePromise = null;\r\n    if (users.length === 1) {\r\n        titlePromise = Str.get_string('addbulknotesingle', 'core_notes');\r\n    } else {\r\n        titlePromise = Str.get_string('addbulknote', 'core_notes', users.length);\r\n    }\r\n\r\n    return ModalFactory.create({\r\n        type: ModalFactory.types.SAVE_CANCEL,\r\n        body: Templates.render('core_user/add_bulk_note', context),\r\n        title: titlePromise,\r\n        buttons: {\r\n            save: titlePromise,\r\n        },\r\n        removeOnClose: true,\r\n    })\r\n    .then(modal => {\r\n        modal.getRoot().on(ModalEvents.save, () => submitAddNote(courseid, users, modal));\r\n\r\n        modal.show();\r\n\r\n        return modal;\r\n    });\r\n};\r\n\r\n/**\r\n * Add a note to this list of users.\r\n *\r\n * @param {Number} courseid\r\n * @param {Number[]} users\r\n * @param {Modal} modal\r\n * @return {Promise}\r\n */\r\nconst submitAddNote = (courseid, users, modal) => {\r\n    const text = modal.getRoot().find('form textarea').val();\r\n    const publishstate = modal.getRoot().find('form select').val();\r\n\r\n    const notes = users.map(userid => {\r\n        return {\r\n            userid,\r\n            text,\r\n            courseid,\r\n            publishstate,\r\n        };\r\n    });\r\n\r\n    return Repository.createNotesForUsers(notes)\r\n    .then(noteIds => {\r\n        if (noteIds.length === 1) {\r\n            return Str.get_string('addbulknotedonesingle', 'core_notes');\r\n        } else {\r\n            return Str.get_string('addbulknotedone', 'core_notes', noteIds.length);\r\n        }\r\n    })\r\n    .then(msg => notifyUser(msg))\r\n    .catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Show the send message popup.\r\n *\r\n * @param {Number[]} users\r\n * @return {Promise}\r\n */\r\nexport const showSendMessage = users => {\r\n    if (!users.length) {\r\n        // Nothing to do.\r\n        return Promise.resolve();\r\n    }\r\n\r\n    let titlePromise;\r\n    if (users.length === 1) {\r\n        titlePromise = Str.get_string('sendbulkmessagesingle', 'core_message');\r\n    } else {\r\n        titlePromise = Str.get_string('sendbulkmessage', 'core_message', users.length);\r\n    }\r\n\r\n    return ModalFactory.create({\r\n        type: ModalFactory.types.SAVE_CANCEL,\r\n        body: Templates.render('core_user/send_bulk_message', {}),\r\n        title: titlePromise,\r\n        buttons: {\r\n            save: titlePromise,\r\n        },\r\n        removeOnClose: true,\r\n    })\r\n    .then(modal => {\r\n        modal.getRoot().on(ModalEvents.save, () => {\r\n            submitSendMessage(modal, users);\r\n        });\r\n\r\n        modal.show();\r\n\r\n        return modal;\r\n    });\r\n};\r\n\r\n/**\r\n * set delay time to load\r\n * \r\n * @param  {[type]} ms [description]\r\n */\r\nconst wait = ms => {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n};\r\n/**\r\n * Spinner template\r\n * \r\n * @return {[Html]} spinner html\r\n */\r\nconst spinner = () => {\r\n    return '<p class=\"text-center\">'\r\n        + '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i>'\r\n        + '</p>';\r\n}\r\n\r\n/**\r\n * getBody modal\r\n *\r\n * @param {Object} formdata\r\n */\r\nconst getBody = formdata => {\r\n    if (typeof formdata === \"undefined\") {\r\n        formdata = {};\r\n    }\r\n    // Get the content of the modal.\r\n    var params = {jsonformdata: JSON.stringify(formdata)};\r\n    return Fragment.loadFragment('local_newsvnr', 'send_email_form', 1, params).catch(Notification.exception);\r\n}\r\n\r\n/**\r\n * Submit the form via ajax.\r\n *\r\n * @param {Object} modal\r\n */\r\nconst submitFormAjax = modal => {\r\n    // We don't want to do a real form submission.\r\n    const form = modal.getRoot().find('form');\r\n    $('button[type=\"button\"]').attr('disabled','disabled');\r\n\r\n    // Convert all the form elements values to a serialised string.\r\n    var formData = form.serialize();\r\n    var ids = $('#list-userid').val();\r\n    var courseId = $('#enrolusersbutton-1 input[name=id]').val();\r\n    formData = formData + '&users=' + encodeURI(ids) + '&courseid=' + encodeURI(courseId);\r\n    // Now we can continue...\r\n    modal.setBody(spinner);\r\n    Ajax.call([{\r\n        methodname: 'local_newsvnr_submit_send_email_form',\r\n        args: {contextid: 1, jsonformdata: JSON.stringify(formData)},\r\n    }])[0].then(async function(data) {\r\n        if (data) {\r\n            // We could trigger an event instead.\r\n            // Yuk.\r\n            Y.use('moodle-core-formchangechecker', function() {\r\n                M.core_formchangechecker.reset_form_dirty_state();\r\n            });\r\n            modal.setBody(getBody(formData));\r\n            await wait(2000).then(resp => {\r\n                initKendo();\r\n            });\r\n            alertify.success(M.util.get_string('sendingsuccess', 'local_newsvnr'), 'success', 3);\r\n            $('button[type=\"button\"]').removeAttr('disabled');\r\n        } else {\r\n            modal.setBody(getBody(formData));\r\n            await wait(2000).then(resp => {\r\n                initKendo();\r\n            });\r\n        }\r\n    }).catch(error => {\r\n        Notification.addNotification({\r\n            message: error.message,\r\n            type: 'error',\r\n        });\r\n    });;\r\n}\r\n\r\n/**\r\n * Init kendo template\r\n *\r\n * @param {Object} modal\r\n */\r\nconst initKendo = modal => {\r\n    var script = Config.wwwroot + '/local/newsvnr/ajax/email/emailmanagement.php';\r\n    var settingsEmailType = {\r\n        type: 'GET',\r\n        dataType: \"json\",\r\n        contentType: 'application/json; charset=utf-8',\r\n        data: {\r\n            action: 'get_emailtype',\r\n        }\r\n    }\r\n    $.ajax(script, settingsEmailType)\r\n    .then(function(resp) {\r\n        $('#email-type').kendoDropDownList({\r\n            dataSource: resp,\r\n            dataTextField: \"text\",\r\n            dataValueField: \"value\",\r\n            change: function(e) {\r\n                var value = this.value();\r\n                var settingsTemplate = {\r\n                    type: 'GET',\r\n                    dataType: \"json\",\r\n                    contentType: 'application/json; charset=utf-8',\r\n                    data: {\r\n                        action: 'get_emailcontent',\r\n                        templateid : value\r\n                    }\r\n                }\r\n                $.ajax(script, settingsTemplate)\r\n                .then(function(template) {\r\n                    $('#id_subject').val(template.subject);\r\n                    $('#id_content_editoreditable').html(template.content);\r\n                    $('#id_content_editoreditable').focus();\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Send a email to these users\r\n * \r\n * @param  {[String]} ids [description]\r\n * @return {[Object]} modal    [description]\r\n */\r\nexport const showSendEmail = ids => {\r\n    return ModalFactory.create({\r\n            type: ModalFactory.types.SAVE_CANCEL,\r\n            title: M.util.get_string('sendemail', 'local_newsvnr'),\r\n            body: getBody()\r\n        })\r\n    .then( async function(modal, title) {\r\n        // Keep a reference to the modal.\r\n\r\n        modal.setSaveButtonText(M.util.get_string('sendemail', 'local_newsvnr'));\r\n        // Forms are big, we want a big modal.\r\n        modal.setLarge();\r\n\r\n        // We want to reset the form every time it is opened.\r\n        modal.getRoot().on(ModalEvents.hidden, function() {\r\n            modal.getRoot().remove();\r\n        }.bind(this));\r\n\r\n        // We want to hide the submit buttons every time it is opened.\r\n        modal.getRoot().on(ModalEvents.shown, function() {\r\n            var idsHtml = '<input class=\"d-none\" id=\"list-userid\" value=\"' + ids + '\">';\r\n            modal.getRoot().append(idsHtml);\r\n            modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\r\n        }.bind(this));\r\n\r\n         modal.getRoot().on(ModalEvents.save, e => {\r\n            // Trigger a form submission, so that any mform elements can do final tricks before the form submission\r\n            // is processed.\r\n            // The actual submit even tis captured in the next handler.\r\n            e.preventDefault();\r\n            modal.getRoot().find('form').submit();\r\n        });\r\n        modal.getRoot().on('submit', 'form', e => {\r\n            e.preventDefault();\r\n            submitFormAjax(modal);\r\n        });\r\n\r\n        modal.show();\r\n\r\n        // wait init kendo template\r\n        await wait(2000).then(resp => {\r\n            initKendo(modal);\r\n        });\r\n\r\n        return modal;\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Send a message to these users.\r\n *\r\n * @param {Modal} modal\r\n * @param {Number[]} users\r\n * @return {Promise}\r\n */\r\nconst submitSendMessage = (modal, users) => {\r\n    const text = modal.getRoot().find('form textarea').val();\r\n\r\n    const messages = users.map(touserid => {\r\n        return {\r\n            touserid,\r\n            text,\r\n        };\r\n    });\r\n\r\n    return Repository.sendMessagesToUsers(messages)\r\n    .then(messageIds => {\r\n        if (messageIds.length == 1) {\r\n            return Str.get_string('sendbulkmessagesentsingle', 'core_message');\r\n        } else {\r\n            return Str.get_string('sendbulkmessagesent', 'core_message', messageIds.length);\r\n        }\r\n    })\r\n    .then(msg => notifyUser(msg))\r\n    .catch(Notification.exception);\r\n};\r\n"],"file":"bulkactions.min.js"}